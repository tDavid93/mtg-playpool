version: '3'
services:
  
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB} 


  backend:
    image: mtg-playpool/backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      REFRESH_TOKEN_EXPIRE_MINUTES: ${REFRESH_TOKEN_EXPIRE_MINUTES}
      ALGORITHM: ${ALGORITHM}
      JWT_REFRESH_SECRET_KEY: ${JWT_REFRESH_SECRET_KEY}

    volumes:
      - ./backend/app:/app
    depends_on:
      migrater:
        condition: service_completed_successfully 
    
  frontend:
    image: mtg-playpool/frontend
    environment:
      API_URL: http://localhost:8050
      WDS_SOCKET_PORT: 0 
    volumes:
      - ./frontend/mtg-playpool-frontend:/app
      - /app/node_modules
    build:
      context: ./frontend
      dockerfile: Dockerfile
    
  nginx:
    image: mtg-playpool/nginx
    
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8050:80"
    depends_on:
      - backend
      - frontend


  migrater:
    image: mtg-playpool/migrate
    build:
      context: ./database/migrate
      dockerfile: Dockerfile
    environment:
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: "no"
    depends_on:
      - database
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

          

      